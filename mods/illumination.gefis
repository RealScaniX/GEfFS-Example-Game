This is Illumination by ScaniX

entity Place 
   attributes
		number illumination // is there a light in this place?

entity playercharacter is a thing
	attributes
		number illumination  // this value defines how much the player can "see"
		lightsource light    // in the beginning we only have matches

entity item
	attributes
		number illumination is 0

entity lightsource is an item
	attributes
		number steps // how many steps does this last?
		number usedSteps // how many steps are used
		bool lit is false // we expect a specific light source to have a function here

there is an event called light_update_event
	its eventproc is "lightsource_update"
	its always is true
	its repeat is true
	its probability is 100

function lightsource_update
	do
		now l is player.light
		if l is not null
			l.usedSteps = l.usedSteps + 1
			if l.usedSteps > l.steps
				say "Your lightsource just went dark. As your eyes have been adjusted to this
						[if l.illumination > 70]blinding[else if l.illumination > 40]bright[else if l.illumination > 20]small[else]dim[end]
						light you need a few seconds to see anything in the dark that now surrounds you."
				now player.light is null
			else if l.usedSteps is l.steps - 2
				say "Your lightsource starts flickering..."
		player.illumination = player.location.illumination
		if player.light is a lightsource and player.light.lit
			player.illumination = player.illumination + player.light.illumination
		now ilist is [inventoryList]
		for each itm in ilist
			if itm is a equippable and itm.equipped
				player.illumination = player.illumination + itm.illumination

function setlight
	understand
		setlightsource [light]
	do
		if light is not null
			if light.usedSteps >= light.steps
				say "There is no more light in the [+light.name]."
				return
		player.light = light

function scare
	understand
		scare [amount], [msg]
		scare [amount]
	do
		if msg is not empty
			say "<span style=\"text-shadow: 0px 1px 1px #FF0000;filter:dropshadow(color=#FF0000, offx=0, offy=1);\">[+msg]</span>"
		player.fear = player.fear + amount
		if player.fear >= 100
			player.fear = 99
			goToPlace alternative entry hall
			return true
		return false

function soothe
	understand
		soothe [amount], [msg]
		soothe [amount]
	do
		if msg is not empty
			say "<span style=\"text-shadow: 0px 1px 1px #2080FF;filter:dropshadow(color=#2080FF, offx=0, offy=1);\">[+msg]</span>"
		player.fear = player.fear - amount
		if player.fear < 0
			player.fear = 0
		
when play begins or resumes
	add light_update_event to player.events

before function goToPlace
	now illu is destination.illumination
	if player.light is not null and player.light.lit
		illu = illu + player.light.illumination
	if illu < 10
		say "You'd rather not go there without any light."
		return
