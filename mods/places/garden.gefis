this is garden by scanix

entity gardenTile is a place
	its illumination is 15
	its description is @[gardenTileDesc]
	its intro is @[gardenTileIntro]
	its regions are {"anywhere", "outside", "garden"}
	its music is "Anguish.mp3"
	attributes
		text blocked		// tall tree or something that blocks you from going there
		bool mapped			// true if it should appear on the map
		number x
		number y

there is a gardenTile called garden
	its intro is @[gardenIntro]
	its exits are {"south": garden door}
	its illumination is 15

after function mainprompt
	if player.location is a gardenTile
		if globals.gardenMapping and [playerOwns garden map]
			if temps.gardenMapShowing
				say "You hold the [link look at $|lower $]garden map[/link] up to find your way."
			else
				say "You have the [link look at $|raise $]garden map[/link] ready to note your discoveries."
	else if temps.gardenMapShowing
		temps.gardenMapShowing = false
		hide overlay "ne"

understand
	"look at map" as "look at garden map"

action lowermap
	understand
		lower garden map
		lower map
	do
		if temps.gardenMapShowing
			temps.gardenMapShowing = false
			hide overlay "ne"
			say "You lower the map and concentrate on your surroundings."
		else
			say "You aren't holding that up at the moment."

action raisemap
	understand
		raise garden map
		raise map
		hold garden map up
		hold map up
	do
		if not temps.gardenMapShowing
			say "You raise the map to find your path."
			displayGardenMap
		else
			say "You are already the map up to your face."

function gardenIntro
	do
		if globals.gardenTiles is null
			addOneTimeEvent "gardenCreation"
			garden.known = false
		else
			gardenTileIntro

function gardenTileIntro
	do
		this.known = false
		if user.subjects.# is 1
			if user.subjects has "north" or user.subjects has "northeast" or user.subjects has "northwest"
				say "You step deeper into the garden."
			else if user.subjects has "south" or user.subjects has "southeast" or user.subjects has "southwest"
				say "You get closer to the house."
		say this.description
		gardenMapping
		if temps.gardenMapShowing
			displayGardenMap

function gardenMapping
	do
		now x is player.location.x
		now y is player.location.y
		if not globals.gardenMapping and chance of 66
			if [playerOwns pen] and [playerOwns sketch pad]
				say "Flipping over a page on the sketch pad, you start to draw a map of the garden on a sheet of paper."
				globals.gardenMapping = true
				addToInv garden map
			else if [playerOwns pen] and not globals.gardenMapMentioned
				say "You think about drawing a map on your hand with the pen, but you are pretty sweaty and it would probably not be readable for more than a minute."
			else if [playerOwns sketch pad] and not globals.gardenMapMentioned
				say "You would draw a map on the sketch pad, but you don't have a pen."
			else if not globals.gardenMapMentioned
				say "The garden is big enough to make you believe that you should probably draw a map to not get lost in it."
			globals.gardenMapMentioned = true
		if globals.gardenMapping
			if [playerOwns garden map] and [playerOwns pen]
				now somethingMapped is false
				if not globals.gardenTiles.(y).(x).mapped
					globals.gardenTiles.(y).(x).mapped = true
					somethingMapped = true
				for h from -1 to 1
					for v from -1 to 1
						if |h| == |v|
							continue
						if x+h >= 0 and x+h < globals.gardenWidth and y+v >= 0 and y+v < globals.gardenHeight
							if not globals.gardenTiles.(y+v).(x+h).mapped and globals.gardenTiles.(y+v).(x+h).blocked is not null
								globals.gardenTiles.(y+v).(x+h).mapped = true
								somethingMapped = true
				if somethingMapped
					temps.gardenMapString = null // redraw map
					say "You [one of]mark this place[or]check your surroundings and note them[at random] on your map."
			else if not temps.missingMap
				temps.missingMap = true
				if not [playerOwns pen]
					say "You want to write down this place on your map, but when you grab for your pen, you remember that you don't have it anymore."
				else 
					say "You want to mark this place on your map, but then you remember that you got rid of that piece of paper."
					say "It is probably a lot more adventurous without it."

there is an item called garden map
	its name is "map"
	its actions are {"look at", "rise", "lower"}
	its description is @[gardenMapDesc]

there is an item called sketch pad

there is an item called pen
	its description is "It is a green ball pen. At least the plastic shell is green.\nTesting it on your palm, you see that the ink has the standard dark blue color."

there is a thing called stick
	its actions are {"look at", "use", "smell", "taste", "listen to"}
	its description is @[stickDesc]
	its taste is @[stickTaste]
	its useProc is "useStick"

understand
	"throw stick" as "use stick"

function stickTaste
	do
		if globals.stickProgress is 0
			say "Licking across the stick, you come to the conclusion that it tastes of wood. Ith altho hath a liddle shplinder in thongue flavour tho ith..."
		else
			say "No, thanks. You already got enough of your own drool in your mouth."

when play begins
	globals.stickProgress = 0

function stickDesc
	do
		addOneTimeEvent "stickDescEvent"

function stickDescEvent
	do
		globals.stickProgress = globals.stickProgress + 1
		if 1 is globals.stickProgress
			say "The stick is a part of some branch that must have fallen off some tree here. The bark is still mostly intact. You bend down to pick it up."
			wait
			say "It is the kind of stick your...\n"
			wait for 2 seconds
			say "Suddenly your eyes become watery and you throw the stick away to get rid of the memory. That, of course, makes things even worse as you are now standing there
					looking ahead and half expecting the stick to come back to you."
			throwStick
			wait
		else if 2 is globals.stickProgress
			say "You have to look at it twice to realize that this is really the same stick that you threw away. You pick it up and turn it around."
			wait for 6 seconds
			say "There is some glistening stuff in the middle. Touching it with your finger, you get the impression that the stick is a little warmer at that place."
			say "Rubbing your index finger against your thumb, you notice that the fluid has a consistency that is very well known to you. It is drool."
			wait
			say "Out of curiosity you throw the stick again, just to see what will happen."
			throwStick
			wait
		else
			say "There is is again. The magically reappearing stick."

function useStick
	do
		if globals.stickProgress < 2
			stickDesc
		else
			throwStick

function throwStick
	do
		if globals.stickProgress > 2
			say "Still wondering who is playing with you, you pick the stick up again and throw it away."
		remove stick from player.location.items
		redrawGardenMap
		add stickReturn to player.events

there is an event called stickReturn
	its probability is 30
	its repeat is false
	its always is false
	its delay is 5
	its eventProc is "stickReturn"

function stickReturn
	do
		this.delay = 3
		if player.location is a gardenTile
			this.repeat = false
			add stick to player.location.items
			play "118441__localtalkradio__rustling.ogg" on audio channel "sound" with volume 100
			flush
			if 1 is globals.stickProgress
				say "You hear some rustling behind you and turn around, but you see nothing. Maybe it was just a squirrel. Are they active during the night?"
			else if 2 is globals.stickProgress
				say "The rustling appears again and you try to be quicker this time, even following the sound as long as you could hear it."
				wait for 5 seconds
				say "But whatever it was, it vanished into some dark corner without a trace. So you return to where you've been before and look down at the stick 
						with a sigh of resignation."
			else
				say "A rustling sound announces the return of the stick. Turning around you see it already lying there, waiting to be thrown again."
			wait
			redrawGardenMap
		else
			this.repeat = true

function gardenMapDesc
	do
		append "You look at your map to check the progress.\n"
		now mappedPortion is 0
		for y from 0 to globals.gardenHeight-1
			for x from 0 to globals.gardenWidth-1
				tile = globals.gardenTiles.(y).(x)
				if tile.mapped
					mappedPortion = mappedPortion + 1
		append "You guess that you have mapped about [+rounded value of (mappedPortion * 100.0 / (globals.gardenWidth*globals.gardenHeight) + (random number between 0 and 5))]% 
				of the whole garden. Plus minus five percent."

function displayGardenMap
	do
		now color is "#2010A0"
		now bgcolor is "#FEFAEF"
		if temps.gardenMapString is null
			now mapstr is ""
			for y from 0 to globals.gardenHeight-1
				for x from 0 to globals.gardenWidth-1
					tile = globals.gardenTiles.(y).(x)
					style = ""
					imageclass = ""
					content = ""
					if tile.mapped
						if x == 0
							style = style + "border-left-color:[+color];"
						if x == globals.gardenWidth-1
							style = style + "border-right-color:[+color];"
						if y == 0
							style = style + "border-top-color:[+color];"
						if y == globals.gardenHeight-1
							style = style + "border-bottom-color:[+color];"
						if tile.blocked is "bush"
							imageclass = " tileBush"
						else if tile.blocked is "tree"
							imageclass = " tileTree"
						else if tile.items has "chest"
							imageclass = " tileChest"
						else if tile.items has "tool shed"
							imageclass = " tileShed"
						else if tile.items has "grave"
							imageclass = " tileGrave"
						else if tile.blocked is null
							imageclass = " tileDot"
						if tile.items has "stick"
							content = content + "<div class=\"gardenTile tileStick\"></div>"
					if x == 0
						style = style + "clear:both;"
					mapstr = mapstr + "<div class=\"gardenTile" + imageclass + "\" style=\"" + style + "\">" + content + "</div>"
			temps.gardenMapString = mapstr
		overlaystr = "<div class=\"gardenMap\" style=\"
					margin:10px;padding:20px;
					box-shadow: 0 3px 6px 0px rgba(0, 0, 0, 0.75);
					-webkit-box-shadow: 0 3px 6px 0px rgba(0, 0, 0, 0.75);
					-moz-box-shadow: 0 3px 6px 0px rgba(0, 0, 0, 0.75);\">"
		overlaystr = overlaystr + "<div style=\"position:absolute;z-index:40;left:[+35 + player.location.x * 30]px;top:[+41 + player.location.y * 30]px;overflow:visible;\">
						[image pen.png]
				  </div>"
		overlaystr = overlaystr + temps.gardenMapString + "<br style=\"clear:both;\"/></div>"
		if temps.gardenMapShowing
			set overlaystr in overlay "ne" with style "frameless"
		else
			show overlaystr in overlay "ne" with style "frameless"
			temps.gardenMapShowing = true
		
function redrawGardenMap
	do
		temps.gardenMapString = null // redraw map
		if temps.gardenMapShowing // need to do that as the map drawing already happened in this turn
			displayGardenMap

there is a thing called grave

there is a container called garden tool shed
	its name is "tool shed"
	its description is @"This is a small garden tool shed made of corrugated metal. It is barely big enough to enter, but big enough to hold quite some tools. 
			[if this.open]You can see some scissors, bottles with insecticides, a lawn mover, a rake and other stuff that looks too much like work for your taste.
			[else]The door is closed, but there is no lock.[end]"
	its items are {shovel, hook}

there is a thing called shovel
	its description is "It is a shovel. What else is there to say about it? There is no blood on it, but if you want, you could imagine that the rusty pattern in the lower end
			is dried blood, if you want."

function gardenTileDesc
	do
		debugSay "Position [+this.x], [+this.y]"
		now x is player.location.x
		now y is player.location.y
		if x == 0 && y == 0
			say "You're standing in the northwest corner of the garden."
		else if x == globals.gardenWidth-1 && y == 0
			say "You're standing in the northeast corner of the garden."
		else if x == 0
			say "You've reached the western border of the garden."
		else if x == globals.gardenWidth-1
			say "You've reached the eastern end of the garden."
		else if y == 0
			say "You've reached the north end of the garden."
		else if y == globals.gardenHeight-1
			if player.location is garden
				say "You're standing at the entrance to the garden. Or from your point of view: The entrance to the house."
			else
				say "You are standing next to the wall of the house."

function gardenCreation
	do
		now showTexts is false
		if globals.chapter < 2
			chapterAdvance
			showTexts = true
			say "You step out into the cool night and take a look around."
			flush
		else
			if not [playerOwns pen]
				addToInv pen
			if not [playerOwns sketch pad]
				addToInv sketch pad
		// generate garden tiles
		width = 7
		height = 8
		globals.gardenWidth = width
		globals.gardenHeight = height
		entranceX = integer value of (random number between (width / 2) and (width * 2 / 3))
		// create tiles
		now zz is random number between 1 and 3
		now tiles is a new map
		for v from 0 to height-1
			now row is a new map
			if showTexts
				if v is 3
					wait for 1 seconds
					say "This garden really looks bigger than expected. In the sparse moonlight you can see some bushes and large trees."
					flush
				else if v is (int value of (height / 2 + 1))
					wait for 2 seconds
					say "The grass could use a shaving, that's for sure."
					flush
				else if v is height-1
					wait for 1 seconds
					say "If you lean a bit to the left, you can catch a glimpse of some wooden structure in the back."
			for h from 0 to width-1
				if (h == entranceX) && (v == height-1)
					now tile is garden
				else
					now tile is a new gardenTile called "[one of]somewhere green[or]a grassy area[or]in the garden[at random]"
					tile.encounters = garden.encounters
					// blocked
					if ((h+(v%3)*2+zz) % 4 == 0) && chance of 72
						tile.blocked = "[one of]bush[or]tree[at random]"
				tile.x = h
				tile.y = v
				row.(h) = tile
			tiles.(v) = row
		// scatter some stuff in the garden
		now things is a new list
		//-chest 1: a music tape, guarded by a dark spark
		now chest1 is a new treasure chest called "chest"
		chest1.guardian = dark spark
		chest1.items = {music tape}
		add chest1 to things
		//-chest 2: a dagger, guarded by a reflection
		now chest2 is a new treasure chest called "chest"
		chest2.guardian = reflection
		chest2.items = {dagger}
		add chest2 to things
		//-throwing stick
		add stick to things
		//-grave
		add grave to things
		//-garden tool shed
		add garden tool shed to things
		while things.# > 0
			now c is things.0
			cx = random number between 1 and (width - 2)
			cy = random number between 1 and (int value of (height * 2 / 3 - 2))
			tile = tiles.(cy).(cx)
			if tile.blocked is null and tile.items.# is 0
				add c to tile.items
				remove 0 from things
		// Set exits
		for v from 0 to height-1
			for h from 0 to width-1
				tile = tiles.(v).(h)
				// add exits
				if v > 0 && tiles.(v-1).(h).blocked is null
					tile.exits.north = tiles.(v-1).(h)
				if v < height-1 && tiles.(v+1).(h).blocked is null
					tile.exits.south = tiles.(v+1).(h)
				if h > 0 && tiles.(v).(h-1).blocked is null
					tile.exits.west = tiles.(v).(h-1)
				if h < width-1 && tiles.(v).(h+1).blocked is null
					tile.exits.east = tiles.(v).(h+1)
		for v from 0 to height-1
			for h from 0 to width-1
				tile = tiles.(v).(h)
				if tile.exits has "west"
					if tile.exits.west.exits has "north"
						tile.exits.northwest = tile.exits.west.exits.north
					if tile.exits.west.exits has "south"
						tile.exits.southwest = tile.exits.west.exits.south
				if tile.exits has "east" 
					if tile.exits.east.exits has "north"
						tile.exits.northeast = tile.exits.east.exits.north
					if tile.exits.east.exits has "south"
						tile.exits.southeast = tile.exits.east.exits.south
				if tile.exits has "south" and tile.exits.south is a place // entrance
					if tile.exits.south.exits has "west"
						tile.exits.southwest = tile.exits.south.exits.west
					if tile.exits.south.exits has "east"
						tile.exits.southeast = tile.exits.south.exits.east
				if tile.exits has "north"
					if tile.exits.north.exits has "west"
						tile.exits.northwest = tile.exits.north.exits.west
					if tile.exits.north.exits has "east"
						tile.exits.northeast = tile.exits.north.exits.east
		globals.gardenTiles = tiles
		player.location = garden
		//if globals.chapter >= 2
		//	dumpMap
