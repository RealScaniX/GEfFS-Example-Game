This is Alternative Entry hall by ScaniX

There is a place called alternative entry hall
	its intro is @[alternativeentryhallintro]
	its description is @[alternativeentryhalldesc]
	its illumination is 40
	its music is "Quinns Song-A New Man.mp3"
	its events are {alternativeentryhallsoothe}
	its items are {ticking sound, entrance, cellar door, stairway}
	its pacified is true
	its exits are {"up": stairway, "down": cellar door, "south": entrance, "north": kitchen door, "northeast": northeast door, "northwest": west door, "west": lowerBathroomDoor, "east": east door}
	its regions is {"house", "first floor"}
	its ambience is "27077__daveincamas__clockticks_noecho.ogg"
	its ambienceVolume is 40

there is an event called alternativeentryhallsoothe
	its eventproc is "alternativeentryhallsoothe"
	its always is true
	its repeat is true
	its delay is 1

there is a doorPassage called northeast door
	its locked is true

there is a doorPassage called east door
	its locked is true

there is a doorPassage called west door
	its locked is true

there is a doorPassage called lowerBathroomDoor
	its origin is alternative entry hall
	its destination is lowerBathroom

function alternativeentryhallsoothe
	do
		if player.fear < 4
			return
		now x is ((player.fear+5) / 5) % 100
		soothe x, "[one of]The blue light calms your nerves.[or]The weird magical light soothes you.[or]The blue light seems to burn the darkness around you away.[at random]"

function alternativeentryhallintro
	do
		say "You don't know how long you were gone. It takes you a few seconds to remember what happened."
		say "One thing is instantly evident: You are no longer lying in the cellar."
		say "It isn't really that dark here either, there is some "
		soothe 20, "nice blue light"
		say " shining from behind you."
		say "You slowly stand up and do some stretching to get rid of the numb feeling in your body."

there is a doorPassage called entrance
	its locked is true
	its preproc is @[entrancetrip]
	its description is @[entranceDesc]
	
function entranceDesc
	do
		say "What has once been a normal front door of this house is now a huge circular stone plate. It seems to be made of some kind of blue, glowing marble. Although you 
				suspect that this isn't really a thing you could find in a normal quarry."
		say "On the outer ring there are five metallic keyholes with the colors blue, red, orange, green, and purple."
		if globals.entranceLocksOpened > 0
			now clist is a new list
			for each col in {"blue", "red", "orange", "green", "purple"}
				if globals.("entranceLock_[+col]")
					add col to clist
			if clist.# == 1
				say "You managed to unlock the [+clist.0] lock."
			else
				say "You already opened the "
				now i is 0
				for each col in clist
					i = i + 1
					say "[if i == clist.#] and [else if i > 1], [end][+col]"
				say " locks."
		say "In the center there is [if globals.entranceLocksOpened >= 5]another keyhole that opened up after you unlocked all five other locks[else]a white or silver metal cover
				that hides something of importance, at least that is your impression when you look at it[end]."
		say "The blue light seems to fill up the large hall completely and is moving somehow, like sunbeams below the rippled surface of the ocean. It kinda has the same effect on 
				you as well. You feel like nothing can hurt you here."
		

function entrancetrip
	do
		say "Nope!"
		return false

function alternativeentryhalldesc
	do
		say "Looking around, you notice that this hall looks very similar to the entry hall from before, but there are differences."
		say "The biggest one is probably the thing you see in front of you when you turn towards the [link look at|open|unlock|close]entrance[/link]."
		say "Or better yet: What once has been the entrance."
		return ""

before action unlockwithkey
	do
		if d is entrance
			// check keys: blue, red, orange, green, purple
			say "That key does not fit here."
			return
