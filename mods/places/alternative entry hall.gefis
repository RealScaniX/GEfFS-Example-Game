This is Alternative Entry hall by ScaniX

There is a place called alternative entry hall
	its intro is @[alternativeentryhallintro]
	its description is @[alternativeentryhalldesc]
	its illumination is 40
	its music is "Infinite Perspective.mp3"
	its events are {alternativeentryhallsoothe}
	its items are {ticking sound, entrance, cellar door, stairway}
	its pacified is true
	its exits are {"up": stairway, "down": cellar door, "south": entrance, "north": kitchen door, "northeast": northeast door, "northwest": northwest door, "west": lowerBathroomDoor, "east": east door}
	its regions are {"anywhere", "house", "first floor"}
	its ambience is "27077__daveincamas__clockticks_noecho.ogg"
	its ambienceVolume is 40

there is an event called alternativeentryhallsoothe
	its eventproc is "alternativeentryhallsoothe"
	its always is true
	its repeat is true
	its delay is 1

there is a doorPassage called northeast door
	its locked is true
	its origin is alternative entry hall
	its destination is living room

there is a doorPassage called east door
	its locked is true
	its origin is alternative entry hall
	its destination is music room

there is a doorPassage called northwest door
	its locked is true
	its origin is alternative entry hall
	its destination is library

there is a doorPassage called lowerBathroomDoor
	its origin is alternative entry hall
	its destination is lowerBathroom

function alternativeentryhallsoothe
	do
		if player.fear < 4
			return
		now x is integer value of ((player.fear+5) / 5)
		soothe x, "[one of]The blue light calms your nerves.[or]The weird magical light soothes you.[or]The blue light seems to burn the darkness around you away.[at random]"

function alternativeentryhallintro
	do
		say "You don't know how long you were gone. It takes you a few seconds to remember what happened."
		say "One thing is instantly evident: You are no longer lying in the cellar."
		say "It isn't really that dark here either, there is some "
		soothe 20, "nice blue light"
		say " shining from behind you."
		say "You slowly stand up and do some stretching to get rid of the numb feeling in your body."

there is a doorPassage called entrance
	its locked is true
	its preproc is @[entrancetrip]
	its description is @[entranceDesc]
	
function entranceDesc
	do
		say "What once has been the normal front door of this house is now a huge circular stone plate. It seems to be made of some kind of blue, glowing marble. Although you 
				suspect that this isn't really a thing you could find in a normal quarry."
		say "On the outer ring there are five metallic keyholes in the colors blue, red, orange, green, and purple. "
		if globals.entranceLocksOpened > 0
			now clist is a new list
			for each col in {"blue", "red", "orange", "green", "purple"}
				if globals.("entranceLock_[+col]")
					add col to clist
			if clist.# == 1
				say "You managed to unlock the [+clist.0] lock."
			else
				say "You already opened the "
				now i is 0
				for each col in clist
					i = i + 1
					say "[if i == clist.#] and [else if i > 1], [end][+col]"
				say " locks."
		else
			say "\n"
		say "In the center there is [if globals.entranceLocksOpened >= 5]another keyhole that opened up after you unlocked all five other locks[else]a white or silver metal cover
				that hides something of importance, at least that is your impression when you look at it[end]."
		say "The blue light seems to fill up the large hall completely and is moving somehow, like sunbeams below the rippled surface of the ocean. It kinda has the same effect on 
				you as well. You feel like nothing can hurt you here."
		
before action open
	now xxx is [resolveitem d]
	if d is entrance
		say "You doubt that this can be opened in the classic way."
		return

function entrancetrip
	do
		say "You cannot go through that entrance in the same way as you entered this house."
		return false

function alternativeentryhalldesc
	do
		say "Looking around, you notice that this hall looks very similar to the entry hall from before, but there are differences."
		say "The biggest one is probably the thing you see in front of you when you turn towards the [link look at|open|unlock|close]entrance[/link]."
		say "Or better yet: What once has been the entrance."
		return ""

before action unlockwithkey
	do
		if d is entrance
			k = [resolveItem k]
			if k is null
				say "You don't see that here."
			else if k is not a key
				say "You will have a difficult time unlocking it with the [+k.name]."
			else if not [playerOwns k]
				say "You should take that first."
			else
				// check keys: blue, red, orange, green, purple
				if k is a circle key
					globals.circleKey = k
					addOneTimeEvent "entranceUnlocking"
				else
					say "That key does not fit here."
			return

function entranceUnlocking
	do
		now k is globals.circleKey
		say "You stick the [+k.name] into the [+k.color] keyhole and turn it counterclockwise until you hear a clicking sound and cannot move the key anymore."
		flush
		sleep 3
		if k is key of light
			// finale!
			return
		else if k is blue key
			say "You hear something unlocking in the northeast corner of this hall."
			northeast door.locked = false
		else if k is red key
			say "You hear something unlocking on the upper floor."
			eastwingSouthDoor.locked = false
		else if k is orange key
			say "You hear something unlocking on the east side of this hall."
			east door.locked = false
		else if k is green key
			say "You hear a distant unlocking sound to the northeast."
			garden door.locked = false
		else if k is purple key
			say "You hear something unlocking on the west side of this hall."
			northwest door.locked = false
		globals.("entranceLock_[+k.color]") = true
		globals.entranceLocksOpened = globals.entranceLocksOpened + 1
		if globals.entranceLocksOpened == 5
			say "This time the sound is even louder than before and echoes through the hall. Then some mechanic inside starts to stir.\n
					Another second later the white plate begins to move aside and finally reveals... another keyhole."
			cellar door.locked = false
		flush
		sleep 3
		say "There is a rumbling sound coming from the cellar door."
		if globals.entranceLocksOpened == 5
			say "If your math is correct (and your teacher would probably doubt that), all five bars of the cellar door should be open now."

