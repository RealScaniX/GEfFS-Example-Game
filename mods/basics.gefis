This is gefis one basics by ScaniX

Entity Thing is an Entity
   attributes
		bool discovered is true
		text description
		list actions are {"look at"}

entity Item is a Thing
	its actions are {"look at", "take"}
   attributes
		bool carryable is true
      number weight

entity playercharacter is a thing
	attributes
		place location
		number fear is 30
		number glow is 0  // the inner light value of the player

there is a playercharacter called Player
	its location is entry hall

Entity container is a thing
	its actions are {"look at", "open", "close"}
	attributes
		bool locked is false
		bool open is false
		bool known is false
		list items

function openclosecontainer
	understand
		openclosecontainer [d], [state]
	do
		if not (d is a container)
			say "You don't know how to open this."
			return
		if not (player.location.items has d)
			say "You don't see this here."
			return
		if d.open is state
			if d.open
				say "Isn't it open enough for you?"
			else
				say "It already is closed. It might not be airtight, but there is nothing you can do about it."
			return
		now d.open is state
		/*
		if d.open and !d.known
			now d.known is true
			for each itm in d.items
				now itm.discovered is true*/
		say "You [if state]open[else]close[end] the [+d.name]."

function discovercontainer
	understand
		discovercontainer [d]
	do
		if not (d is a container)
			return
		if d.open
			now d.known is true
			for each itm in d.items
				now itm.discovered is true

action lookat
	understand
		look [smt]
		look at [smt]
		examine [smt]
	do
		// can you see that?
		now smt is [resolveitem smt]
		if smt is a thing
			say smt.description
		else
			say "You don't see that."

function visibleitemlist
	do
		now itemlist is a new list
		// items of place
		for each itm in player.location.items
			if itm.discovered
				add itm to itemlist
				if itm is a container and itm.open
					for each containeritem in itm.items
						if containeritem.discovered
							add containeritem to itemlist
		// passages of place
		//for each itm in player.location.exits
		//	if itm is a passage
		//		add itm to itemlist
		return itemlist

function resolveitem
	understand
		resolveitem [itm]
	do
		now vlist is [visibleitemlist]
		// add inventory stuff
		for each x in player.inventory
			add x to vlist
		// add location
		add player.location to vlist
		if itm is a Phrase
			if vlist has itm
				now itm is vlist.(key of itm in vlist)
			else
				now itm is null
		else if not (vlist has itm)
			now itm is null
		return itm

action end game
	do
		end game

action open
	understand
		open [d]
	do
		now d is [resolveitem d]
		if d is null
			say "You don't see that here."
		else if d is a Door
			openclosedoor d, true
		else if d is a container
			openclosecontainer d, true
		else
			say "You don't know how to open this."

action close
	understand
		close [d]
	do
		now d is [resolveitem d]
		if d is null
			say "You don't see that here."
		else if d is a Door
			openclosedoor d, false
		else if d is a container
			openclosecontainer d, false
		else
			say "You don't know how to close this."
