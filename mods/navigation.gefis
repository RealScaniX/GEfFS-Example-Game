This is navigation by ScaniX

entity Place is a thing
   attributes
      bool known
      list persons
      list items
      map exits   // either a place or a door
		text intro	// text to be said when first entering a place
		number illumination // is there a light in this place?
		bool navigatable is true // if false we are somewhere that cannot be entered/left by normal means
		key key is master key

entity Passage is an Entity
	attributes
		place origin
		place destination
		bool passable is true

entity Door is a Passage
	its passable is false
   attributes
      bool locked
      bool open
      key key

entity Stairway is a Passage
	its passable is @[stairwaytrip]

function stairwaytrip
	do
		if chance of (player.location.illumination + player.illumination) in 50
			// all fine
			return true
		otherwise
			// player tripped in the dark
			if player.location is this.origin
				// moving up
				say "You trip because of the dim light and hit your knee on the step. *ouch!*\n"
			else
				// moving down
				say "Halfway down you misplace your foot in the dark and were coming down faster than planned."
			// still managed to get to the destination though
			return true

entity Key is an item

there is a key called master key

action navigate
   understand
      go [destination]
   modes
      main
   do
		// NOTE: if there are closed doors inbetween... we just assume the player opened, went through and closed them again
		// NOTE: if there are locked doors inbetween... we should have set one of the places to !navigatable
      //say "You want to go " + destination.name + "."
		// can we navigate at all?
		if not player.location.navigatable
			say "[one of]You cannot leave this place.[or]There is no easy way out from here.[or]You see no exit.[at random]"
			return
		// find target
		if destination is a place
         //say destination.name+" is a place."
			// we can go there if it is known and we can navigate
			if destination.known
				if destination.navigatable
					go to place destination
					return
		else
         //say destination.name+" is not a place."
			// no place, but is that the name of a passage?
			if player.location.exits has destination.name
				now exit is player.location.exits.(destination.name)
				if exit is a place
					//say "The exit " + destination.name + " leads to the place " + exit + "."
					go to place exit
				else if exit is a passage
					//say "The exit " + exit.name + " is a passage between "+exit.origin+" and "+exit.destination+"."
					if exit.passable
						if player.location is exit.origin
							//say "Following the passage forward."
							go to place exit.destination
						else if player.location is exit.destination
							//say "Following the passage backwards."
							go to place exit.origin
						else
							say "We seem to have run into an error..."
				return
		say "You don't know such a place nor a path leading to it."

function gotoplace
	understand
		go to place [destination]
	do
		if not destination is a place
			say "The destination is no place! :(\n"
			return
		now player.location is destination
		if not player.location.known
			now player.location.known is true
			say player.location.intro
		//do look around

action lookaround
	understand
		look around
	do
		say player.location.description


action entest
	do
		now x is new place
		say "key is: " + x.key
		say "."
		now y is new door
		say "passable: " + y.passable

